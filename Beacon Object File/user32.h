//user23

WINUSERAPI BOOL WINAPI USER32$PostMessageA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
WINUSERAPI BOOL WINAPI USER32$EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);
WINUSERAPI BOOL WINAPI USER32$DdeUninitialize(DWORD idInst);
WINUSERAPI BOOL WINAPI USER32$DdeDisconnectList(HCONVLIST hConvList);
WINUSERAPI UINT WINAPI USER32$DdeInitializeA(LPDWORD pidInst, PFNCALLBACK pfnCallback, DWORD afCmd, DWORD ulRes);
WINUSERAPI LRESULT WINAPI USER32$SendMessageA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
WINUSERAPI LPWSTR WINAPI USER32$CharPrevW(LPCWSTR lpszStart, LPCWSTR lpszCurrent);
WINUSERAPI LONG_PTR WINAPI USER32$SetWindowLongPtrA(HWND hWnd, int nIndex, LONG_PTR dwNewLong);
WINUSERAPI LONG_PTR WINAPI USER32$GetWindowLongPtrA(HWND hWnd, int nIndex);
WINUSERAPI LONG WINAPI USER32$SetWindowLongA(HWND hWnd, int nIndex, LONG dwNewLong);
WINUSERAPI LONG WINAPI USER32$GetWindowLongA(HWND hWnd, int nIndex);
WINUSERAPI int WINAPI USER32$IsWindowVisible(HWND hWnd);
WINUSERAPI int WINAPI USER32$IsWindowVisible(HWND hWnd);
WINUSERAPI int WINAPI USER32$GetWindowTextA(HWND hWnd, LPSTR lpString, int nMaxCount);
WINUSERAPI int WINAPI USER32$GetClassNameA(HWND hWnd, LPSTR lpClassName, int nMaxCount);
WINUSERAPI int WINAPI USER32$EnumDesktopWindows(HDESK hDesktop, WNDENUMPROC lpfn, LPARAM lParam);
WINUSERAPI HWND WINAPI USER32$FindWindowExA(HWND hWndParent, HWND hWndChildAfter, LPCSTR lpszClass, LPCSTR lpszWindow);
WINUSERAPI HWND WINAPI USER32$FindWindowA(LPCSTR lpszClass, LPCSTR lpszWindow);
WINUSERAPI HCONVLIST WINAPI USER32$DdeConnectList(DWORD idInst, HSZ hszService, HSZ hszTopic, HCONVLIST hConvList, PCONVCONTEXT pCC);
WINUSERAPI HANDLE WINAPI USER32$GetPropA(HWND hWnd, LPCSTR lpString);
WINUSERAPI DWORD WINAPI USER32$GetWindowThreadProcessId(HWND hWnd, LPDWORD lpdwProcessId);
WINUSERAPI BOOL WINAPI USER32$SetPropA(HWND hWnd, LPCSTR lpString, HANDLE hData);
DECLSPEC_IMPORT LPWSTR WINAPI USER32$CharPrevW(LPCWSTR lpszStart, LPCWSTR lpszCurrent);
DECLSPEC_IMPORT int WINAPI USER32$IsWindowVisible(HWND hWnd);
DECLSPEC_IMPORT int WINAPI USER32$GetWindowTextA(HWND hWnd, LPSTR lpString, int nMaxCount);
DECLSPEC_IMPORT int WINAPI USER32$GetClassNameA(HWND hWnd, LPSTR lpClassName, int nMaxCount);
DECLSPEC_IMPORT int WINAPI USER32$EnumDesktopWindows(HDESK hDesktop, WNDENUMPROC lpfn, LPARAM lParam);